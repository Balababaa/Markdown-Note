Hibernate主键生成策略：

hibernate主键分成两大类：代理主键和自然主键

顾名思义“
代理主键：对象中不存在无重复的属性时，就需要使用代理key 上一篇文章的USer类的id属性；
自然主键： 可以用对象的属性来作为主键的比如学生的学号，身份证号等，这些都是唯一的。


再ORM映射文件中有这样的一个配置
	<id name="">
		<generator class=""></generator>
	</id>

这就是配置了数据库表的主键与对象属性的对应关系

其中<generator class=""></generator> 标签配置的就是主键生成策略
class属性有一下是一种值：
			assigned|increment|hilo|seqhilo|sequence|identity|native|uuid|guid|foreign|select
			assigned: 由用户生成主键，多用于自然主键
			increment: 由Hibernate从数据库中取出主键的最大值(每个session只取1次),以该值为基础+1
			hilo: hilo算法生成主键
			seqhilo: 适用于支持sequence的数据库的hilo方法
			sequence: 采用数据库提供的sequence机制生成主键,需要数据库支持sequence
			identity: 有数据库生成主键，主键必须设置为自增长
			native: identity sequence hilo 三者之一
			uuid: Universally Unique Identifier 是指在一台机器上生成的数字,它保证对在同一时空中的所有机器都是唯一的(主键类型需要为字符串)
			guid: Globally Unique Identifier全球唯一标识符 比uuid更长
			foreign: 使用另外一个相关联的对象的主键作为该对象主键,主要用于一对一关系中select
			select: 使用触发器生成主键,主要用于早期的数据库主键生成机制,能用到的地方非常少


1.assigned
由用户生成主键，多用于自然主键，主键有用户维护
使用student类来演示：

编写好类和xml文件：

Hibernate: 
    insert 
    into
        t_student
        (name, number) 
    values
        (?, ?)

执行两次插入后

如果不设置主键id；
就会产生如下错误，提示用户必须手动设置主键的值：
org.hibernate.id.IdentifierGenerationException: ids for this class must be manually assigned before calling save(): com.xiaobai.domain.Student
 
无视 数据库设置的主键自增。

2.increment: 
	由Hibernate从数据库中取出主键的最大值(每个session只取1次),以该值为基础+1，
	可见该策略需要先查询一次数据库再进行插入操作，打印的SQL应该为两条

Hibernate: 
    select
        max(number) 
    from
        t_student
Hibernate: 
    insert 
    into
        t_student
        (name, number) 
    values
        (?, ?)

	
再次主键策略下用户可以手动设置主键的值，但不会影响在数据库中的最终记录，始终未最大主键值+1.
无视 数据库设置的主键自增。

3 hilo:
	hilo算法生成主键.
	hilo算法计算主键值的公式为：hi * (max_lo + 1) + lo

	假如初始时hi为2；max_lo为3；
则有：
2* (3 + 1) + 0=8
2* (3 + 1) + 1=9
2* (3 + 1) + 2=10
2* (3 + 1) + 3=11

此后hi的值+1，再循环，
里存在一个特殊的情况，就是当hi从0开始的话，则跳过lo＝0的归位。例如0*(3+1) + 0 = 0，主键是不能为0的，应该从0*(3+1) + 1 = 1开始。

使用hilo生成策略，要在数据库中建立一张额外的表，默认表名为hibernate_unique_key,默认字段为integer类型，名称是next_hi在默认配置下没添加一条记录，hibernate_unique_key表内的next_hi就会加1
用户也可以手动配置hibernate_unique_key表的参数：

		<id name="number">
			<!-- 主键策略 -->
			<column name="number"></column>
			<generator class="hilo">
				<param name="table">hibernate_unique_key</param> //默认
				<param name="column">next_hi</param> //默认
				<param name="max_lo">5</param>
			</generator>

		</id>

当lo循环完成一次或者事务提交时，hi的值就会加1，故有可能出现主键不连续。

Hibernate: 
    insert 
    into
        t_student
        (name, number) 
    values
        (?, ?)

再次主键策略下用户可以手动设置主键的值，但不会影响在数据库中的最终记录，依然采用hilo生成.
无视 数据库设置的主键自增。

4.seqhilo: 适用于支持sequence的数据库的hilo方法
与hilo类似，通过hi/lo算法实现的主键生成机制，只是将hilo中的数据表换成了序列sequence，需要数据库中先创建sequence，适用于支持sequence的数据库，如Oracle。

<id name="id" column="id">

<generator class="seqhilo">

<param name="sequence">hibernate_seq</param>

<param name="max_lo">100</param>

</generator>

</id>

只能用于支持sequence的数据库中

5、sequence
采用数据库提供的sequence机制生成主键，需要数据库支持sequence。如oralce、DB、SAP DB、PostgerSQL、McKoi中的sequence。MySQL这种不支持sequence的数据库则不行（可以使用identity）。

<generator class="sequence">

<param name="sequence">hibernate_id</param>

</generator>

<param name="sequence">hibernate_id</param> 指定sequence的名称

Hibernate生成主键时，查找sequence并赋给主键值，主键值由数据库生成，Hibernate不负责维护，使用时必须先创建一个sequence，如果不指定sequence名称，则使用Hibernate默认的sequence，名称为hibernate_sequence，前提要在数据库中创建该sequence。

特点：只能在支持序列的数据库中使用，如Oracle。


6.identity: 有数据库生成主键，主键必须设置为自增长

该策略时有数据库来维护主键，再数据库不支吃sequence时使用该策略，数据库表的主键必须设置为主键自增。
Oracle这类没有自增字段的则不支持。
Hibernate: 
    insert 
    into
        t_student
        (name) 
    values
        (?)
sql语句也与之前的不同，只有一个name列，而没有number了
当未设置主键自增是，将无法像数据库表中添加数据。

7.native: identity sequence hilo 三者之一
数据库会自行判断
例如MySQL使用identity，Oracle使用sequence

注意：如果Hibernate自动选择sequence或者hilo，则所有的表的主键都会从Hibernate默认的sequence或hilo表中取。并且，有的数据库对于默认情况主键生成测试的支持，效率并不是很高。

8.uuid: Universally Unique Identifier 是指在一台机器上生成的数字,它保证对在同一时空中的所有机器都是唯一的(主键类型需要为字符串)

将Student类中的number属性改为String类型 
保存后如下所示：
Hibernate: 
    insert 
    into
        t_student
        (name, number) 
    values
        (?, ?)


9.guid: Globally Unique Identifier全球唯一标识符 比uuid更长多了四个-。

简答来说就是比uuid更长的字符串。
Hibernate: 
    select
        uuid()
Hibernate: 
    insert 
    into
        t_student
        (name, number) 
    values
        (?, ?)
因为sql使用uuid（）函数生成的这个值，所有比uuid策略多了一条语句。
Hibernate在维护主键时，先查询数据库，获得一个uuid字符串，该字符串就是主键值，该值唯一，缺点长度较大，支持数据库有限，优点同uuid，跨数据库，但是仍然需要访问数据库。
不同的数据库长度可能不同，Mysql 36（-），Oracle32（）

10.foreign: 使用另外一个相关联的对象的主键作为该对象主键,主要用于一对一关系中
因为一对一的关系中，两张表基本上都快可以合成一张表，所以该策略很少是使用


11.select: 使用触发器生成主键,主要用于早期的数据库主键生成机制,能用到的地方非常少